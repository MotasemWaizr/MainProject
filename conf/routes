# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET / controllers.Main.index()


GET /remove/:individualName/:className	 controllers.OntoPlay.remove(individualName: String, className: String)
GET /individual/:individualName	 controllers.OntoPlay.individual(individualName: String)
GET /view/:className controllers.OntoPlay.view(className : String)
GET /test/:className controllers.OntoPlay.testAngular(className: String)

GET /sendOffer/:offerURI/:targetURI controllers.OntoPlay.sendOffer(targetURI: String, offerURI: String)
GET /add/:className			controllers.OntoPlay.process(className: String)
GET /check         			controllers.OntoPlay.add(conditionJson: String, individualName:String)    


#Add ontoplay routes
->         /                           ontoplay.Routes

#properties
GET /properties/class/:className 		controllers.webservices.Properties.getPropertiesByClassName(className: String)
GET /properties/operators/:propertyUrl controllers.webservices.Operators.getOpertors(propertyUrl: String)

#annotations
GET /annotationProperties/get/:componentUri controllers.webservices.Annotations.getAnnotationPropertyByUri(componentUri: String)


#classes
GET /class/property/:propertyUri		controllers.webservices.Classes.getClassesByProperty(propertyUri: String)


#individuals
GET /individuals/class/:className controllers.webservices.Individuals.getIndividualsByClassName(className: String)
POST /individuals/save controllers.webservices.Individuals.addIndividual()
GET /individuals/update/:individualName controllers.webservices.Individuals.updateIndividual(individualName: String)

# Javascript routing
GET    /assets/javascripts/routes      controllers.OntoPlay.javascriptRoutes()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


